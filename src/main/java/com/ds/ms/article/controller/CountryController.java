package com.ds.ms.article.controller;import com.ds.ms.article.domain.Country;import com.ds.ms.article.repository.CountriesRepository;import lombok.AllArgsConstructor;import org.springframework.http.MediaType;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.Optional;@AllArgsConstructor@RequestMapping("/country")@RestControllerpublic class CountryController {    private final CountriesRepository countriesRepository;    /*    @PostMapping(produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)    public VehicleDtoWithId savePerson(@RequestBody VehicleDto vehicleDto) {        return vehicleService.saveVehicle(vehicleDto);    }    @PutMapping(produces = MediaType.APPLICATION_JSON_VALUE,            consumes = MediaType.APPLICATION_JSON_VALUE)    public VehicleDtoWithId updatePerson(@RequestBody VehicleDtoWithId vehicleDtoWithId) {        return vehicleService.updateVehicle(vehicleDtoWithId);    }     */    @GetMapping(value = "/id/{id}", produces = MediaType.APPLICATION_JSON_VALUE)    public Optional<Country> findById(@PathVariable("id") Long id) {        return this.countriesRepository.findById(id);    }    @GetMapping(value = "/count", produces = MediaType.APPLICATION_JSON_VALUE)    public long count() {        return this.countriesRepository.count();    }    @GetMapping(value = "/name/{name}", produces = MediaType.APPLICATION_JSON_VALUE)    public Optional<Country> findByName(@PathVariable("name") String coutryName) {        return this.countriesRepository.findByName(coutryName);    }    /*    @GetMapping(value = "/plate/{vehiclePlate}", produces = MediaType.APPLICATION_JSON_VALUE)    public VehicleDtoWithId findByPlate(@PathVariable("vehiclePlate") String vehiclePlate) {        return this.vehicleService.findByPlate(vehiclePlate);    }     */}